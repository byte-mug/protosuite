; Copyright (C) 2019 Simon Schmidt
; Usage of the works is permitted provided that this instrument is retained
; with the works, so that any entity that uses the works is notified of this
; instrument.
;
; DISCLAIMER: THE WORKS ARE WITHOUT WARRANTY.

; This is an example mta_decision.ini

; A MTA usually works on behalf of a domain hosting E-Mail accounts.
; eg. A domain like "example.com" hosting "alice@example.com", "bob@example.com" etc.
; To do this properly, the MTA must distinguish between E-Mail addresses ending with
; "@example.com" and other E-Mail adresses.
;
; In this example, we treat E-Mail adresses ending with either @mit.edu or @mit.net
; as our own.
[local]
suffix = @mit.edu
suffix = @mit.net

; A MTA must deal with two sorts of clients: MUAs (Mail User Agents, like Thunderbird) and other MTAs.
;
; The MTA can distiguish between MUAs and other MTAs by looking at their behavoir:
;  - MUAs usually authenticate using a username and a password, or more generally, by using a local
;    account, managed by the MTA (or the system).
;  - MTAs don't authenticate, as those do not own a local account.
;
; Based on the fact whether the client is a MUA or a MTA, the client is permitted to do various actions:
;  - The MUA sends mails with the sender address being local (like alice@mit.edu in our example) and the
;    recipient address being either local (like bob@mit.edu) or remote (like bob@ucb.edu)
;  - The MTA sends mails withe the sender address being remote (like bob@ucb.edu or bob@example.com) and the
;    recipient address being local (like alice@mit.edu)
;
; This is the default behavoir. However the MTA can be configured to decide otherwise.

; The [user2me] section defines what an authenticated (username+password) client can do.
; Permissions are defined as <src>2<dst>=<perm> where <src> and <dst> is either "local" or "remote" and
; dst is either "1"/"grant"/"granted" or "0"/"deny"/"denied".
;
; Note: the present values in this section are the default values.
[user2me]
local2local=1
local2remote=1
remote2local=0
remote2remote=0

; The [mta2me] section defines what an unauthenticated client can do. The format is the sime like in [user2me].
; This section also defines properties, that define, how remote MTAs are authenticates (eg. SPF, etc.)
[mta2me]
; Note: the following values define the default behavoir.
local2local=0
local2remote=0
remote2local=1
remote2remote=0

; With this line, you can turn the SPF on. SPF is off by default.
spf=on
